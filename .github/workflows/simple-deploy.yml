name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    env:
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Setup Playwright
        run: npx playwright install --with-deps

      - name: Run tests
        run: npm run test:ci
        continue-on-error: true

      - name: Run type check
        run: npm run type-check
        continue-on-error: true

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: Start preview server
        run: |
          npm run preview:ci &
          echo "Waiting for preview server on http://localhost:4001 ..."
          for i in {1..60}; do
            if curl -sSf http://localhost:4001 > /dev/null; then
              echo "Preview server is up."
              break
            fi
            sleep 2
          done

      - name: Run Accessibility Tests
        run: npm run test:accessibility:ci || true
        continue-on-error: true

      - name: Check Bundle Size
        run: npm run bundle-size:ci || true
        continue-on-error: true

      - name: Run Lighthouse CI
        run: npm run lhci || true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      # Remove all Vercel deployment steps since auto-deployment works
      - name: Build Success
        run: |
          echo "‚úÖ Build completed successfully!"
          echo "üöÄ Vercel will automatically deploy this commit"
          echo "üìä Check your Vercel dashboard for deployment status"
          echo ""
          echo "üîó Vercel Dashboard: https://vercel.com/dashboard"
          echo "üåê Your site should be available at your Vercel URL"

      - name: Notify Slack on Success
        if: success() && env.SLACK_CHANNEL_ID != ''
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "‚úÖ Build & Test Success\n*Repo:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Actor:* ${{ github.actor }}\n\nüîó Actions Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify Slack on Failure
        if: failure() && env.SLACK_CHANNEL_ID != ''
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "‚ùå Build & Test Failed\n*Repo:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Actor:* ${{ github.actor }}\n\nüîç Check logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    environment: preview
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          npm run test:ci || true
          npm run type-check || true
          npm run lint || true

      - name: Deploy to Vercel (Preview)
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        env:
          WORDPRESS_API_URL: ${{ secrets.WORDPRESS_API_URL }}
          WOOCOMMERCE_CONSUMER_KEY: ${{ secrets.WOOCOMMERCE_CONSUMER_KEY }}
          WOOCOMMERCE_CONSUMER_SECRET: ${{ secrets.WOOCOMMERCE_CONSUMER_SECRET }}
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          GTM_ID: ${{ secrets.GTM_ID }}

      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ **Preview Deployment**')
            );
            
            const previewUrl = '${{ steps.deploy.outputs.preview-url }}';
            const deploymentUrl = '${{ steps.deploy.outputs.url }}';
            const commentBody = `ðŸš€ **Preview Deployment**
            
            Your changes have been deployed to a preview environment!
            
            **Preview URL:** ${previewUrl}
            **Deployment URL:** ${deploymentUrl}
            
            **Branch:** \`${{ github.head_ref }}\`
            **Commit:** \`${{ github.sha }}\`
            **Environment:** Preview
            
            ---
            *This preview will be automatically updated with new commits to this PR.*
            *The preview will be deleted when the PR is closed or merged.*
            
            **Testing Checklist:**
            - [ ] Homepage loads correctly
            - [ ] Navigation works
            - [ ] Product catalog displays
            - [ ] Product details page works
            - [ ] Cart functionality
            - [ ] Checkout process
            - [ ] Mobile responsiveness
            - [ ] Performance is acceptable`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            }

      - name: Run smoke tests
        run: |
          npm run test:smoke
        env:
          BASE_URL: ${{ steps.deploy.outputs.preview-url }}
        continue-on-error: true

      - name: Update PR status
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              target_url: '${{ steps.deploy.outputs.preview-url }}',
              description: 'Preview deployment successful',
              context: 'vercel/preview'
            });

  cleanup-preview:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    environment: preview
    
    steps:
      - name: Cleanup Vercel preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: 'remove --yes'
          working-directory: ./

      - name: Comment cleanup
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ§¹ **Preview Cleanup**
              
              Preview deployment has been cleaned up.
              
              **Branch:** \`${{ github.head_ref }}\`
              **Action:** PR closed/merged
              
              ---
              *Preview environment and associated resources have been removed.*`
            }); 
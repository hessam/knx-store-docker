---
import Layout from '../../layouts/Layout.astro';
import { loadTranslations, isValidLanguage } from '../../lib/i18n';

// Define static paths for all supported languages
export async function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'de' } },
    { params: { lang: 'ar' } }
  ];
}

const { lang } = Astro.params;

// Validate language
if (!lang || !isValidLanguage(lang)) {
  return Astro.redirect('/en/customize-translations');
}

// Load translations
const t = loadTranslations(lang);

// Set page title
const title = `${t.customizeTranslations} - KNX Store`;
---

<Layout title={title}>
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
      <h1 class="text-3xl font-bold text-gray-900 mb-8">{t.customizeFor} {lang.toUpperCase()}</h1>
      
      <!-- Instructions -->
      <div class="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-8">
        <h2 class="text-blue-800 font-semibold mb-2">How to Customize Translations</h2>
        <p class="text-blue-700 mb-4">
          You can customize any translation by entering the translation key and its new value. 
          The changes will be saved to a custom translation file that overrides the default translations.
        </p>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div>
            <strong>Translation Key:</strong> The identifier for the text (e.g., "welcome", "shopNow")
          </div>
          <div>
            <strong>Translation Value:</strong> The actual text in {lang.toUpperCase()} language
          </div>
        </div>
      </div>

      <!-- Customization Form -->
      <div class="bg-white border border-gray-200 rounded-lg p-6 mb-8">
        <h2 class="text-xl font-semibold mb-4">Add/Edit Translation</h2>
        
        <form method="POST" action="/api/save-translation" class="space-y-4">
          <div>
            <label for="key" class="block text-sm font-medium text-gray-700 mb-2">
              {t.translationKey}
            </label>
            <input 
              type="text" 
              id="key" 
              name="key" 
              required
              placeholder="e.g., welcome, shopNow, products"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
          
          <div>
            <label for="value" class="block text-sm font-medium text-gray-700 mb-2">
              {t.translationValue}
            </label>
            <textarea 
              id="value" 
              name="value" 
              required
              rows="3"
              placeholder={`Enter the translation in ${lang.toUpperCase()}...`}
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            ></textarea>
          </div>
          
          <input type="hidden" name="lang" value={lang} />
          
          <div class="flex gap-4">
            <button 
              type="submit" 
              class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-colors"
            >
              {t.save}
            </button>
            <a 
              href={`/${lang}/`}
              class="border border-gray-300 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-50 transition-colors"
            >
              {t.cancel}
            </a>
          </div>
        </form>
      </div>

      <!-- Common Translation Keys -->
      <div class="bg-gray-50 border border-gray-200 rounded-lg p-6">
        <h2 class="text-xl font-semibold mb-4">Common Translation Keys</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div>
            <strong>Navigation:</strong>
            <ul class="mt-2 space-y-1">
              <li><code class="bg-gray-200 px-1 rounded">home</code> - Home page link</li>
              <li><code class="bg-gray-200 px-1 rounded">products</code> - Products page link</li>
              <li><code class="bg-gray-200 px-1 rounded">contact</code> - Contact page link</li>
              <li><code class="bg-gray-200 px-1 rounded">search</code> - Search button</li>
            </ul>
          </div>
          <div>
            <strong>Product Related:</strong>
            <ul class="mt-2 space-y-1">
              <li><code class="bg-gray-200 px-1 rounded">shopNow</code> - Shop now button</li>
              <li><code class="bg-gray-200 px-1 rounded">viewDetails</code> - View details button</li>
              <li><code class="bg-gray-200 px-1 rounded">addToCart</code> - Add to cart button</li>
              <li><code class="bg-gray-200 px-1 rounded">price</code> - Price label</li>
            </ul>
          </div>
          <div>
            <strong>UI Elements:</strong>
            <ul class="mt-2 space-y-1">
              <li><code class="bg-gray-200 px-1 rounded">loading</code> - Loading text</li>
              <li><code class="bg-gray-200 px-1 rounded">noProducts</code> - No products found</li>
              <li><code class="bg-gray-200 px-1 rounded">filter</code> - Filter button</li>
              <li><code class="bg-gray-200 px-1 rounded">save</code> - Save button</li>
            </ul>
          </div>
          <div>
            <strong>Content:</strong>
            <ul class="mt-2 space-y-1">
              <li><code class="bg-gray-200 px-1 rounded">welcome</code> - Welcome message</li>
              <li><code class="bg-gray-200 px-1 rounded">smartBuildingSolutions</code> - Smart building solutions</li>
              <li><code class="bg-gray-200 px-1 rounded">professionalSolutions</code> - Professional solutions</li>
              <li><code class="bg-gray-200 px-1 rounded">advancedAutomation</code> - Advanced automation description</li>
            </ul>
          </div>
        </div>
      </div>

      <!-- Success/Error Messages -->
      <div id="message" class="hidden mt-6 p-4 rounded-md">
        <p id="message-text"></p>
      </div>
    </div>
  </main>

  <script>
    // Handle form submission
    const form = document.querySelector('form');
    const messageDiv = document.getElementById('message');
    const messageText = document.getElementById('message-text');

    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(form as HTMLFormElement);
        
        try {
          const response = await fetch('/api/save-translation', {
            method: 'POST',
            body: formData
          });
          
          const result = await response.json();
          
          if (result.success) {
            showMessage('Translation saved successfully!', 'success');
            (form as HTMLFormElement).reset();
          } else {
            showMessage('Error saving translation. Please try again.', 'error');
          }
        } catch (error) {
          showMessage('Error saving translation. Please try again.', 'error');
        }
      });
    }

    function showMessage(text: string, type: 'success' | 'error') {
      if (messageDiv && messageText) {
        messageText.textContent = text;
        messageDiv.className = `mt-6 p-4 rounded-md ${
          type === 'success' ? 'bg-green-50 text-green-800 border border-green-200' : 'bg-red-50 text-red-800 border border-red-200'
        }`;
        messageDiv.classList.remove('hidden');
        
        // Hide message after 5 seconds
        setTimeout(() => {
          messageDiv.classList.add('hidden');
        }, 5000);
      }
    }
  </script>
</Layout> 
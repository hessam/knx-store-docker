---
import Layout from '../../layouts/Layout.astro';
import ProductCard from '../../components/ProductCard.astro';
import { getWordPressAPI } from '../../lib/api/wordpress';
import { formatWordPressContent, formatDate } from '../../utils/format';

// Fetch products from WordPress API
let products: any[] = [];
let error: string | null = null;
let loading = true;

try {
  const wordPressAPI = getWordPressAPI();
  products = await wordPressAPI.fetchProducts();
  loading = false;
} catch (err) {
  error = err instanceof Error ? err.message : 'Unknown error occurred';
  loading = false;
}

// Mock product data for loading state demonstration
const mockProduct = {
  id: 1,
  name: "Sample Product",
  description: "This is a sample product description for testing purposes.",
  price: "99.99",
  regular_price: "99.99",
  sale_price: "79.99",
  images: [
    {
      src: "https://via.placeholder.com/400x400?text=Product+Image",
      alt: "Sample Product"
    }
  ],
  permalink: "/products/sample",
  slug: "sample"
};
---

<Layout title="Products Test - KNX Store">
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-8">Products Test Page</h1>
    
    <!-- Loading State Demo -->
    <section class="mb-12">
      <h2 class="text-2xl font-semibold text-gray-800 mb-6">Loading State Demo</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        <!-- Loading Product Card -->
        <ProductCard product={mockProduct} loading={true} />
        
        <!-- Regular Product Card -->
        <ProductCard product={mockProduct} loading={false} />
        
        <!-- Another Loading Card -->
        <ProductCard product={mockProduct} loading={true} />
        
        <!-- Another Regular Card -->
        <ProductCard product={mockProduct} loading={false} />
      </div>
    </section>

    <!-- Real Products from API -->
    <section class="mb-12">
      <h2 class="text-2xl font-semibold text-gray-800 mb-6">
        Real Products from WordPress API
        {loading && <span class="text-blue-600"> (Loading...)</span>}
      </h2>
      
      {error && (
        <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
          <h3 class="text-red-800 font-semibold">Error Loading Products</h3>
          <p class="text-red-600">{error}</p>
        </div>
      )}
      
      {loading ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {Array.from({ length: 8 }).map((_, index) => (
            <ProductCard product={mockProduct} loading={true} />
          ))}
        </div>
      ) : products.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {products.slice(0, 8).map((product) => (
            <ProductCard 
              product={{
                id: product.id,
                name: product.title.rendered,
                description: product.content.rendered,
                price: "99.99", // Mock price since WordPress doesn't have prices
                regular_price: "99.99",
                sale_price: undefined,
                images: product._embedded?.featured_media ? [
                  {
                    src: product._embedded.featured_media[0].source_url,
                    alt: product.title.rendered
                  }
                ] : [],
                permalink: product.link,
                slug: product.slug
              }}
              loading={false}
            />
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <p class="text-gray-600">No products found.</p>
        </div>
      )}
    </section>

    <!-- Debug Information -->
    <section class="bg-gray-50 rounded-lg p-6">
      <h2 class="text-xl font-semibold text-gray-800 mb-4">Debug Information</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
        <div>
          <h3 class="font-semibold text-gray-700">Environment Variables</h3>
          <ul class="space-y-1 text-gray-600">
            <li>WORDPRESS_API_URL: {import.meta.env.WORDPRESS_API_URL || 'Not set'}</li>
            <li>NODE_ENV: {import.meta.env.NODE_ENV || 'Not set'}</li>
          </ul>
        </div>
        <div>
          <h3 class="font-semibold text-gray-700">Product Data</h3>
          <ul class="space-y-1 text-gray-600">
            <li>Products loaded: {products.length}</li>
            <li>Loading state: {loading ? 'Yes' : 'No'}</li>
            <li>Error: {error || 'None'}</li>
          </ul>
        </div>
      </div>
    </section>
  </main>
</Layout> 